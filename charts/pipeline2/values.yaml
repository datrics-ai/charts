# Default values for pipeline2.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

worker:
  replicaCount: 3
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  command: 
    - "/bin/bash"
  args:
    - "-c"
    - "celery -A celery_worker.celery worker --loglevel=debug --pool=solo --without-heartbeat --max-tasks-per-child 1 --soft-time-limit 3000 --time-limit 3600"

  nodeSelector: {}
  tolerations: []
  affinity: {}
  nameOverride: ""
  fullnameOverride: ""

replicaCount: 1

image:
  repository: registry.gitlab.com/datrics.ai/pipeline-2
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred

app:
  nameOverride: ""
  fullnameOverride: ""
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  command:
    - "/bin/bash"

  args:
    - "-c"
    - "gunicorn -w 3 run:app -b 0.0.0.0:8000"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000


ingress:
  enabled: false
  # annotations:
    # kubernetes.io/ingress.class: nginx
    # certmanager.k8s.io/cluster-issuer: "letsencrypt-production"
  # path: /
  # hosts: []
  # tls: {}

config:
  minio:
    hostUrl: minio.example.datrics.ai
    useSSL: true
    accessKey: minio
    secretKey: minio
  celery:
    brokerUrl: redis://redis-master:6379
    resultBackend: redis://redis-master:6379
  logstash:
    host: logstash-logstash
    port: 9200
    version: 1
  env: production
  release: unspecified
  logLevel: INFO