# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/datrics.ai/backend
  version: 0.0.75
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  # annotations:
    # kubernetes.io/ingress.class: nginx
    # certmanager.k8s.io/cluster-issuer: "letsencrypt-production"
  # path: /
  # hosts: []
  # tls: {}

setup:
  resources: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

setup: {}

storage:
  requests: 100Gi
  className: standard

config:
  sessionSecret: "aaaasssdddd"
  senderEmail: "robot@app.datrics.ai"
  uploadDirectoryPath: "/uploads"
  privatePlan: ""
  db:
    host: "postgres-postgresql"
    port: "5432"
    username: "postgres"
    password: "postgres"
    db: "postgres"
    connectionName: "production"
  redis:
    host: "redis-master"
    port: "6379"
    db: "2"
  minio:
    host: "minio"
    port: "9000"
    accessKey: "minio"
    secretKey: "minio"
    useSSL: "false"
    bucket: "storage.app.datrics.ai"
  aws:
    region: "us-east-1"
    accessKeyId: ""
    secretKey: ""
  mailgun:
    apiKey: ""
    domain: ""
  mailchimp:
    apiKey: ""
    listId: ""
  mailerlite:
    signUpGroupId: ""
    subscribeUpGroupId: ""
    apiKey: ""
  fe:
    baseURL: "https://api.platform.datrics.ai"
    signIn: "/signin"
    resetPassword: "/reset-password"
    confirmEmail: "/signup/check-inbox"
    stripeSuccess: "/dashboard"
    stripeCancel: "/payment"
  mongo:
    uri: "mongodb://root:root@mongo-mongodb:27017"
    collection: "datricsPipelines"
  pipeline:
    baseUrl: "https://pipeline2.platform.datrics.ai"
    runRoute: "/job/create"
    getStatusRoute: "/job/status"
    cancelRoute: "/job/cancel"
  deploymentScheduler:
    baseUrl: "http://pipeline2-pipeline2-deployer:8001"
  stripe:
    skWebHook: ""
    skAPI: ""
  sentry:
    dsn: "https://ec271809db8d4d60b8c713703f99e683@o363951.ingest.sentry.io/5478308"
    env: "production"