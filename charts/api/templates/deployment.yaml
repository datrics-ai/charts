{{- $baseURL := "http://localhost:3000" -}}
{{- if .Values.ingress.enabled }}  
  {{- $host := index .Values.ingress.hosts 0 }}
  {{- $ingressPath := $.Values.ingress.path -}}
  {{- if $.Values.ingress.tls }}
    {{- $baseURL := printf "https://%s%s" $host $ingressPath -}}
  {{- else }}
    {{- $baseURL := printf "http://%s%s" $host $ingressPath -}}
  {{- end }}
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "api.fullname" . }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "api.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: api-uploads
          persistentVolumeClaim: 
            claimName: api-uploads
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: SESSION_SECRET
              value: {{ .Values.config.sessionSecret | quote  }}
            - name: DB_HOST
              value: {{ .Values.config.db.host | quote  }}
            - name: DB_PORT
              value: {{ .Values.config.db.port | quote  }}
            - name: DB_USERNAME
              value: {{ .Values.config.db.username | quote  }}
            - name: DB_PASSWORD
              value: {{ .Values.config.db.password | quote  }}
            - name: DB
              value: {{ .Values.config.db.db | quote  }}
            - name: DB_CONNECTION_NAME
              value: {{ .Values.config.db.connectionName | quote  }}
            - name: REDIS_HOST
              value: {{ .Values.config.redis.host | quote  }}
            - name: REDIS_PORT
              value: {{ .Values.config.redis.port | quote  }}
            - name: REDIS_DB
              value: {{ .Values.config.redis.db | quote  }}
            - name: STORAGE_HOST
              value: {{ .Values.config.minio.host | quote  }}
            - name: STORAGE_PORT
              value: {{ .Values.config.minio.port | quote  }}
            - name: STORAGE_ACCESS_KEY
              value: {{ .Values.config.minio.accessKey | quote  }}
            - name: STORAGE_SECRET_KEY
              value: {{ .Values.config.minio.secretKey | quote  }}
            - name: STORAGE_USE_SSL
              value: {{ .Values.config.minio.useSSL | quote  }}
            - name: STORAGE_BUCKET
              value: {{ .Values.config.minio.bucket | quote  }}
            - name: SENDER_EMAIL
              value: {{ .Values.config.senderEmail | quote  }}
            - name: AWS_REGION
              value:  {{ .Values.config.aws.region | quote  }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.config.aws.accessKeyId | quote  }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.config.aws.secretKey | quote  }}
            - name: HOST
              value: "localhost"
            {{- if .Values.ingress.enabled }}
            - name: BASE_URL
              value: {{ include "api.baseURL" . }}
            {{- else }}
            - name: BASE_URL
              value: {{ .Values.config.baseURL | quote  }}
            {{ end }}
            - name: MAIL_API_KEY
              value: {{ .Values.config.mailgun.apiKey | quote  }}
            - name: MAIL_DOMAIN
              value: {{ .Values.config.mailgun.domain | quote  }}
            - name: MAILCHIMP_API_KEY
              value: {{ .Values.config.mailchimp.apiKey | quote  }}
            - name: MAILCHIMP_LIST_ID
              value: {{ .Values.config.mailchimp.listId | quote  }}
            - name: FE_BASE_URL
              value: {{ .Values.config.fe.baseURL | quote  }}
            - name: FE_ROUTE_SIGN_IN
              value: {{ .Values.config.fe.signIn | quote  }}
            - name: FE_ROUTE_RESET_PASSWORD
              value: {{ .Values.config.fe.resetPassword | quote  }}
            - name: FE_ROUTE_CONFIRM_EMAIL
              value: {{ .Values.config.fe.confirmEmail | quote  }}
            - name: FE_ROUTE_PAYMENT_STRIPE_SUCCESS
              value: {{ .Values.config.fe.stripeSuccess | quote  }}
            - name: FE_ROUTE_PAYMENT_STRIPE_CANCEL
              value: {{ .Values.config.fe.stripeCancel | quote  }}
            - name: MAILERLITE_SIGN_UP_GROUP_ID
              value: {{ .Values.config.mailerlite.signUpGroupId | quote  }}
            - name: MAILERLITE_SUBSCRIBE_GROUP_ID
              value: {{ .Values.config.mailerlite.subscribeUpGroupId | quote  }}
            - name: MAILERLITE_API_KEY
              value: {{ .Values.config.mailerlite.apiKey | quote  }}
            - name: UPLOADS_DIRECTORY
              value: {{ .Values.config.uploadDirectoryPath | quote  }}
            - name: MONGO_URI
              value: {{ .Values.config.mongo.uri | quote  }}
            - name: MONGO_COLLECTION
              value: {{ .Values.config.mongo.collection | quote  }}
            - name: PIPELINE_API_BASE_URL
              value: {{ .Values.config.pipeline.baseUrl | quote  }}
            - name: RUN_PIPELINE_ROUTE
              value: {{ .Values.config.pipeline.runRoute | quote  }}
            - name: CANCEL_PIPELINE_ROUTE
              value: {{ .Values.config.pipeline.cancelRoute | quote }}
            - name: GET_STATUS_PIPELINE_ROUTE
              value: {{ .Values.config.pipeline.getStatusRoute | quote  }}
            - name: DEPLOYMENT_SCHEDULER_API_BASE_URL
              value: {{ .Values.config.deploymentScheduler.baseUrl | quote  }}
            - name: PAYMENT_STRIPE_SK_WEB_HOOK
              value: {{ .Values.config.stripe.skWebHook | quote  }}
            - name: PAYMENT_STRIPE_SK_API
              value: {{ .Values.config.stripe.skAPI | quote  }}
            - name: PRIVATE_PLAN
              value: {{ .Values.config.privatePlan | quote }}
            - name: SENTRY_DSN
              value: {{ .Values.config.sentry.dsn | quote }}
            - name: SENTRY_ENV
              value: {{ .Values.config.sentry.env | quote }}
          ports:
            - name: port-3000
              containerPort: 3000
          livenessProbe:
            httpGet:
              path: /api/v1
              port: port-3000
            initialDelaySeconds: 60
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /api/v1
              port: port-3000
            initialDelaySeconds: 60
            periodSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: api-uploads
            mountPath: {{ .Values.config.uploadDirectoryPath | quote  }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: api-uploads
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.storage.requests | quote  }}
      storageClassName: {{ .Values.storage.className | quote  }}