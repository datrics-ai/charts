{{- if .Values.ingress.enabled -}}
{{- $fullName := include "previewer.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- $ingressPath := .Values.ingress.path -}}
{{- if and (.Capabilities.APIVersions.Has "networking.k8s.io/v1") (gt .Capabilities.KubeVersion.Version "1.19.0") }}
apiVersion: networking.k8s.io/v1
{{- else if  and (.Capabilities.APIVersions.Has "networking.k8s.io/v1beta1") (lt .Capabilities.KubeVersion.Version "1.19.0") }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "previewer.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $ingressPath }}
            {{- if and ($.Capabilities.APIVersions.Has "networking.k8s.io/v1") (gt $.Capabilities.KubeVersion.Version "1.19.0")}}
            pathType: Prefix
            {{- end }} 
            backend:
              {{- if and ($.Capabilities.APIVersions.Has "networking.k8s.io/v1") (gt $.Capabilities.KubeVersion.Version "1.19.0")}}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else}} 
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end}}
  {{- end }}
{{- end }}